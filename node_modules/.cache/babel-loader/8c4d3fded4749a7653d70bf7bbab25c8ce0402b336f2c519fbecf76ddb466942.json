{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Reactprac\\\\frontend\\\\src\\\\Pages\\\\DashboardPage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\nimport { getAllRequests } from '../api';\nimport RequestList from '../components/RequestList';\nimport RequestForm from '../components/RequestForm';\nimport ApprovalPanel from '../components/ApprovalPanel';\nimport IssuancePanel from '../components/IssuancePanel';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashboardPage() {\n  _s();\n  const [requests, setRequests] = useState([]);\n  const [role, setRole] = useState('');\n  const [previousRequestCount, setPreviousRequestCount] = useState(0); // To track request count for notifications\n  const [newRequest, setNewRequest] = useState(false); // State to track new requests\n  const navigate = useNavigate(); // Hook for navigation\n\n  useEffect(() => {\n    // Check if user is logged in\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login'); // Redirect to login page if not logged in\n      return;\n    }\n\n    // Get the role from local storage\n    const userRole = localStorage.getItem('role');\n    setRole(userRole);\n\n    // Fetch requests from the API\n    const fetchRequests = async () => {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      try {\n        const {\n          data\n        } = await getAllRequests(config);\n        setRequests(data);\n\n        // Compare request count to detect new requests\n        if (previousRequestCount < data.length) {\n          setNewRequest(true); // Set the flag for new requests\n        } else {\n          setNewRequest(false); // No new requests\n        }\n        setPreviousRequestCount(data.length); // Update previous request count\n      } catch (error) {\n        console.error('Error fetching requests', error);\n      }\n    };\n    fetchRequests();\n  }, [navigate, previousRequestCount]); // Add previousRequestCount to dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [role === 'manager' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-panels\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manager Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), newRequest && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"notification\",\n        children: \"New requests or status updates!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 26\n      }, this), \" \", /*#__PURE__*/_jsxDEV(ApprovalPanel, {\n        requests: requests\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), role === 'fitter' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-panels\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Fitter Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), newRequest && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"notification\",\n        children: \"New requests or status updates!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 26\n      }, this), \" \", /*#__PURE__*/_jsxDEV(RequestForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), role === 'issuer' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-panels\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Engineering Store Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), newRequest && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"notification\",\n        children: \"New requests or status updates!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 26\n      }, this), \" \", /*#__PURE__*/_jsxDEV(IssuancePanel, {\n        requests: requests\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), !['manager', 'fitter', 'issuer'].includes(role) && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Invalid role. Access denied.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"request-list-container\",\n      children: /*#__PURE__*/_jsxDEV(RequestList, {\n        requests: requests\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardPage, \"evN+PgYMk6yv6C4iDYYqbELSroc=\", false, function () {\n  return [useNavigate];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["useEffect","useState","useNavigate","getAllRequests","RequestList","RequestForm","ApprovalPanel","IssuancePanel","jsxDEV","_jsxDEV","DashboardPage","_s","requests","setRequests","role","setRole","previousRequestCount","setPreviousRequestCount","newRequest","setNewRequest","navigate","token","localStorage","getItem","userRole","fetchRequests","config","headers","Authorization","data","length","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","includes","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Reactprac/frontend/src/Pages/DashboardPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\r\nimport { getAllRequests } from '../api';\r\nimport RequestList from '../components/RequestList';\r\nimport RequestForm from '../components/RequestForm';\r\nimport ApprovalPanel from '../components/ApprovalPanel';\r\nimport IssuancePanel from '../components/IssuancePanel';\r\nimport './Dashboard.css';\r\n\r\nfunction DashboardPage() {\r\n  const [requests, setRequests] = useState([]);\r\n  const [role, setRole] = useState('');\r\n  const [previousRequestCount, setPreviousRequestCount] = useState(0); // To track request count for notifications\r\n  const [newRequest, setNewRequest] = useState(false); // State to track new requests\r\n  const navigate = useNavigate(); // Hook for navigation\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      navigate('/login'); // Redirect to login page if not logged in\r\n      return;\r\n    }\r\n\r\n    // Get the role from local storage\r\n    const userRole = localStorage.getItem('role');\r\n    setRole(userRole);\r\n\r\n    // Fetch requests from the API\r\n    const fetchRequests = async () => {\r\n      const config = { headers: { Authorization: `Bearer ${token}` } };\r\n      try {\r\n        const { data } = await getAllRequests(config);\r\n        setRequests(data);\r\n\r\n        // Compare request count to detect new requests\r\n        if (previousRequestCount < data.length) {\r\n          setNewRequest(true); // Set the flag for new requests\r\n        } else {\r\n          setNewRequest(false); // No new requests\r\n        }\r\n\r\n        setPreviousRequestCount(data.length); // Update previous request count\r\n      } catch (error) {\r\n        console.error('Error fetching requests', error);\r\n      }\r\n    };\r\n\r\n    fetchRequests();\r\n  }, [navigate, previousRequestCount]); // Add previousRequestCount to dependency array\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {role === 'manager' && (\r\n        <div className=\"dashboard-panels\">\r\n          <h2>Manager Dashboard</h2>\r\n          {newRequest && <p className=\"notification\">New requests or status updates!</p>} {/* Visual indicator */}\r\n          <ApprovalPanel requests={requests} />\r\n        </div>\r\n      )}\r\n      {role === 'fitter' && (\r\n        <div className=\"dashboard-panels\">\r\n          <h2>Fitter Dashboard</h2>\r\n          {newRequest && <p className=\"notification\">New requests or status updates!</p>} {/* Visual indicator */}\r\n          <RequestForm />\r\n        </div>\r\n      )}\r\n      {role === 'issuer' && (\r\n        <div className=\"dashboard-panels\">\r\n          <h2>Engineering Store Dashboard</h2>\r\n          {newRequest && <p className=\"notification\">New requests or status updates!</p>} {/* Visual indicator */}\r\n          <IssuancePanel requests={requests} />\r\n        </div>\r\n      )}\r\n      {!['manager', 'fitter', 'issuer'].includes(role) && (\r\n        <p>Invalid role. Access denied.</p>\r\n      )}\r\n      <div className=\"request-list-container\">\r\n        <RequestList requests={requests} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
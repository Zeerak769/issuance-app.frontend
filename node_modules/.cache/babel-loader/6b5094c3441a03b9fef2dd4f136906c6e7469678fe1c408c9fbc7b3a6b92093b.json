{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Reactprac\\\\frontend\\\\src\\\\components\\\\RequestList.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport RequestItem from './RequestItem';\nimport { fetchAllManagers } from '../api'; // Import the API to fetch managers\nimport './RequestList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RequestList({\n  requests\n}) {\n  _s();\n  const [activeTab, setActiveTab] = useState('approved');\n  const [managers, setManagers] = useState([]); // State for managers\n  const [selectedManager, setSelectedManager] = useState(''); // State for selected manager\n\n  // Fetch managers on component mount\n  useEffect(() => {\n    const getManagers = async () => {\n      try {\n        const response = await fetchAllManagers(); // Fetch managers from API\n        const managerList = response.data;\n        setManagers(managerList); // Set the list of managers\n        setSelectedManager(''); // Start with no default selection\n      } catch (error) {\n        console.error('Error fetching managers:', error);\n      }\n    };\n    getManagers();\n  }, []);\n\n  // Filter requests based on status and selected manager\n  const filteredRequests = selectedManager ? requests.filter(request => request.requestedManager === selectedManager) : requests;\n  const approvedRequests = filteredRequests.filter(request => request.status === 'Approved');\n  const pendingRequests = filteredRequests.filter(request => request.status === 'Pending');\n  const issuedRequests = filteredRequests.filter(request => request.status === 'Issued');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"request-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"manager-select\",\n        children: \"Select Manager: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"manager-select\",\n        value: selectedManager,\n        onChange: e => setSelectedManager(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select a Manager --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), managers.map(manager => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: manager.username,\n          children: manager.username\n        }, manager._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'approved' ? 'active' : ''}`,\n        onClick: () => setActiveTab('approved'),\n        children: \"Approved Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'pending' ? 'active' : ''}`,\n        onClick: () => setActiveTab('pending'),\n        children: \"Pending Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'issued' ? 'active' : ''}`,\n        onClick: () => setActiveTab('issued'),\n        children: \"Issued Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"request-cards-container\",\n      children: activeTab === 'approved' && approvedRequests.length > 0 ? approvedRequests.map(request => /*#__PURE__*/_jsxDEV(RequestItem, {\n        request: request\n      }, request._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)) : activeTab === 'pending' && pendingRequests.length > 0 ? pendingRequests.map(request => /*#__PURE__*/_jsxDEV(RequestItem, {\n        request: request\n      }, request._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)) : activeTab === 'issued' && issuedRequests.length > 0 ? issuedRequests.map(request => /*#__PURE__*/_jsxDEV(RequestItem, {\n        request: request\n      }, request._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No requests found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(RequestList, \"JdT689AhVFmTvSPAu0W0dyNczpg=\");\n_c = RequestList;\nexport default RequestList;\nvar _c;\n$RefreshReg$(_c, \"RequestList\");","map":{"version":3,"names":["useState","useEffect","RequestItem","fetchAllManagers","jsxDEV","_jsxDEV","RequestList","requests","_s","activeTab","setActiveTab","managers","setManagers","selectedManager","setSelectedManager","getManagers","response","managerList","data","error","console","filteredRequests","filter","request","requestedManager","approvedRequests","status","pendingRequests","issuedRequests","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","manager","username","_id","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Reactprac/frontend/src/components/RequestList.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport RequestItem from './RequestItem';\r\nimport { fetchAllManagers } from '../api';  // Import the API to fetch managers\r\nimport './RequestList.css';\r\n\r\nfunction RequestList({ requests }) {\r\n  const [activeTab, setActiveTab] = useState('approved');\r\n  const [managers, setManagers] = useState([]);  // State for managers\r\n  const [selectedManager, setSelectedManager] = useState('');  // State for selected manager\r\n\r\n  // Fetch managers on component mount\r\n  useEffect(() => {\r\n    const getManagers = async () => {\r\n      try {\r\n        const response = await fetchAllManagers();  // Fetch managers from API\r\n        const managerList = response.data;\r\n\r\n        setManagers(managerList); // Set the list of managers\r\n        setSelectedManager(''); // Start with no default selection\r\n      } catch (error) {\r\n        console.error('Error fetching managers:', error);\r\n      }\r\n    };\r\n\r\n    getManagers();\r\n  }, []);\r\n\r\n  // Filter requests based on status and selected manager\r\n  const filteredRequests = selectedManager\r\n    ? requests.filter(request => request.requestedManager === selectedManager)\r\n    : requests;\r\n\r\n  const approvedRequests = filteredRequests.filter(request => request.status === 'Approved');\r\n  const pendingRequests = filteredRequests.filter(request => request.status === 'Pending');\r\n  const issuedRequests = filteredRequests.filter(request => request.status === 'Issued');\r\n\r\n  return (\r\n    <div className=\"request-list\">\r\n      <h3>Requests</h3>\r\n      <div className=\"filter-container\">\r\n        <label htmlFor=\"manager-select\">Select Manager: </label>\r\n        <select\r\n          id=\"manager-select\"\r\n          value={selectedManager}\r\n          onChange={(e) => setSelectedManager(e.target.value)}\r\n        >\r\n          <option value=\"\">-- Select a Manager --</option>\r\n          {managers.map(manager => (\r\n            <option key={manager._id} value={manager.username}>\r\n              {manager.username}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"tabs\">\r\n        <button\r\n          className={`tab-button ${activeTab === 'approved' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('approved')}\r\n        >\r\n          Approved Requests\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === 'pending' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('pending')}\r\n        >\r\n          Pending Requests\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === 'issued' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('issued')}\r\n        >\r\n          Issued Requests\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"request-cards-container\">\r\n        {activeTab === 'approved' && approvedRequests.length > 0 ? (\r\n          approvedRequests.map((request) => (\r\n            <RequestItem key={request._id} request={request} />\r\n          ))\r\n        ) : activeTab === 'pending' && pendingRequests.length > 0 ? (\r\n          pendingRequests.map((request) => (\r\n            <RequestItem key={request._id} request={request} />\r\n          ))\r\n        ) : activeTab === 'issued' && issuedRequests.length > 0 ? (\r\n          issuedRequests.map((request) => (\r\n            <RequestItem key={request._id} request={request} />\r\n          ))\r\n        ) : (\r\n          <p>No requests found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RequestList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
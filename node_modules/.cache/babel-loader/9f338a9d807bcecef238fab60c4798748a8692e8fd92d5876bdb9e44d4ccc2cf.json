{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Reactprac\\\\frontend\\\\src\\\\components\\\\IssuancePanel.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\nimport { updateRequestStatus, fetchAllManagers } from '../api'; // Import API functions\nimport './IssuancePanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IssuancePanel({\n  requests\n}) {\n  _s();\n  const [selectedRequest, setSelectedRequest] = useState(null);\n  const [selectedManager, setSelectedManager] = useState('');\n  const [managers, setManagers] = useState([]);\n  const [loading, setLoading] = useState(true); // Add a loading state\n  const [error, setError] = useState(null); // Add an error state\n  const navigate = useNavigate(); // Hook for navigation\n\n  // Fetch managers on component mount\n  useEffect(() => {\n    const getManagers = async () => {\n      try {\n        const response = await fetchAllManagers(); // Fetch managers from API\n        setManagers(response.data);\n        if (response.data.length > 0) {\n          setSelectedManager(response.data[0].username); // Set default manager if available\n        }\n        setLoading(false); // Set loading to false when done\n      } catch (error) {\n        console.error('Error fetching managers:', error);\n        setError('Error fetching managers'); // Set error message\n        setLoading(false); // Set loading to false on error\n      }\n    };\n    getManagers();\n  }, []);\n\n  // Filter approved requests based on the selected manager\n  const filteredRequests = requests.filter(request => request.status === 'Approved' && request.requestedManager === selectedManager);\n  const handleIssue = async () => {\n    if (!selectedRequest) return;\n    const token = localStorage.getItem('token');\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    try {\n      await updateRequestStatus(selectedRequest._id, {\n        status: 'Issued'\n      }, config);\n      alert('Request issued');\n      setSelectedRequest(null); // Clear selection after issuance\n    } catch (error) {\n      console.error('Error issuing request', error);\n      alert('Error issuing request'); // Alert user on error\n    }\n  };\n  const handleNavigateToInventory = () => {\n    navigate('/inventory'); // Adjust the path as needed\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading managers...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 23\n  }, this); // Show loading message\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 21\n  }, this); // Show error message\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"issuance-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Issuance Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"manager-select\",\n        children: \"Select Manager: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"manager-select\",\n        value: selectedManager,\n        onChange: e => setSelectedManager(e.target.value),\n        className: \"manager-select\",\n        children: managers.map(manager => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: manager.username,\n          children: manager.username\n        }, manager._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"request-select\",\n        children: \"Select Request: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"request-select\",\n        value: selectedRequest ? selectedRequest._id : '',\n        onChange: e => setSelectedRequest(filteredRequests.find(req => req._id === e.target.value)),\n        className: \"request-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), filteredRequests.map(request => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: request._id,\n          children: request.description\n        }, request._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleIssue,\n      disabled: !selectedRequest,\n      className: \"issue-button\",\n      children: \"Issue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNavigateToInventory,\n      className: \"navigate-button\",\n      children: \"Go to Inventory Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(IssuancePanel, \"bN6iQ8zshIKB573b4X4rZr03KLw=\", false, function () {\n  return [useNavigate];\n});\n_c = IssuancePanel;\nexport default IssuancePanel;\nvar _c;\n$RefreshReg$(_c, \"IssuancePanel\");","map":{"version":3,"names":["useState","useEffect","useNavigate","updateRequestStatus","fetchAllManagers","jsxDEV","_jsxDEV","IssuancePanel","requests","_s","selectedRequest","setSelectedRequest","selectedManager","setSelectedManager","managers","setManagers","loading","setLoading","error","setError","navigate","getManagers","response","data","length","username","console","filteredRequests","filter","request","status","requestedManager","handleIssue","token","localStorage","getItem","config","headers","Authorization","_id","alert","handleNavigateToInventory","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","value","onChange","e","target","map","manager","find","req","description","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Reactprac/frontend/src/components/IssuancePanel.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\r\nimport { updateRequestStatus, fetchAllManagers } from '../api'; // Import API functions\r\nimport './IssuancePanel.css';\r\n\r\nfunction IssuancePanel({ requests }) {\r\n  const [selectedRequest, setSelectedRequest] = useState(null);\r\n  const [selectedManager, setSelectedManager] = useState('');\r\n  const [managers, setManagers] = useState([]);\r\n  const [loading, setLoading] = useState(true); // Add a loading state\r\n  const [error, setError] = useState(null); // Add an error state\r\n  const navigate = useNavigate(); // Hook for navigation\r\n\r\n  // Fetch managers on component mount\r\n  useEffect(() => {\r\n    const getManagers = async () => {\r\n      try {\r\n        const response = await fetchAllManagers(); // Fetch managers from API\r\n        setManagers(response.data);\r\n        if (response.data.length > 0) {\r\n          setSelectedManager(response.data[0].username); // Set default manager if available\r\n        }\r\n        setLoading(false); // Set loading to false when done\r\n      } catch (error) {\r\n        console.error('Error fetching managers:', error);\r\n        setError('Error fetching managers'); // Set error message\r\n        setLoading(false); // Set loading to false on error\r\n      }\r\n    };\r\n\r\n    getManagers();\r\n  }, []);\r\n\r\n  // Filter approved requests based on the selected manager\r\n  const filteredRequests = requests.filter(request => \r\n    request.status === 'Approved' && request.requestedManager === selectedManager\r\n  );\r\n\r\n  const handleIssue = async () => {\r\n    if (!selectedRequest) return;\r\n\r\n    const token = localStorage.getItem('token');\r\n    const config = { headers: { Authorization: `Bearer ${token}` } };\r\n    try {\r\n      await updateRequestStatus(selectedRequest._id, { status: 'Issued' }, config);\r\n      alert('Request issued');\r\n      setSelectedRequest(null); // Clear selection after issuance\r\n    } catch (error) {\r\n      console.error('Error issuing request', error);\r\n      alert('Error issuing request'); // Alert user on error\r\n    }\r\n  };\r\n\r\n  const handleNavigateToInventory = () => {\r\n    navigate('/inventory'); // Adjust the path as needed\r\n  };\r\n\r\n  if (loading) return <p>Loading managers...</p>; // Show loading message\r\n  if (error) return <p>{error}</p>; // Show error message\r\n\r\n  return (\r\n    <div className=\"issuance-panel\">\r\n      <h3>Issuance Panel</h3>\r\n\r\n      {/* Manager selection dropdown */}\r\n      <div className=\"dropdown-container\">\r\n        <label htmlFor=\"manager-select\">Select Manager: </label>\r\n        <select\r\n          id=\"manager-select\"\r\n          value={selectedManager}\r\n          onChange={(e) => setSelectedManager(e.target.value)}\r\n          className=\"manager-select\"\r\n        >\r\n          {managers.map(manager => (\r\n            <option key={manager._id} value={manager.username}>\r\n              {manager.username}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Request selection dropdown */}\r\n      <div className=\"dropdown-container\">\r\n        <label htmlFor=\"request-select\">Select Request: </label>\r\n        <select\r\n          id=\"request-select\"\r\n          value={selectedRequest ? selectedRequest._id : ''}\r\n          onChange={(e) => setSelectedRequest(filteredRequests.find(req => req._id === e.target.value))}\r\n          className=\"request-select\"\r\n        >\r\n          <option value=\"\">Select a request</option>\r\n          {filteredRequests.map(request => (\r\n            <option key={request._id} value={request._id}>{request.description}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Issue button */}\r\n      <button onClick={handleIssue} disabled={!selectedRequest} className=\"issue-button\">\r\n        Issue\r\n      </button>\r\n\r\n      {/* Navigate to Inventory Management */}\r\n      <button onClick={handleNavigateToInventory} className=\"navigate-button\">\r\n        Go to Inventory Management\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IssuancePanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Reactprac\\\\frontend\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom'; // Import Link for navigation\nimport { fetchUserByUsername } from '../api'; // Import function to fetch user by username\nimport bcrypt from 'bcryptjs'; // Import bcrypt to compare password hashes\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n    role: ''\n  });\n  const navigate = useNavigate();\n  const [error, setError] = useState(''); // Add state to store error message\n\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Fetch user by username\n      const {\n        data: user\n      } = await fetchUserByUsername(formData.username);\n\n      // If user doesn't exist\n      if (!user) {\n        setError('Invalid credentials');\n        return;\n      }\n\n      // Compare entered password with hashed password from database\n      const isMatch = await bcrypt.compare(formData.password, user.password);\n      if (!isMatch) {\n        setError('Invalid credentials');\n        return;\n      }\n\n      // Compare the role entered with the role in the database\n      if (formData.role !== user.role) {\n        setError('Incorrect role selected'); // Show error if role does not match\n        return;\n      }\n\n      // If the password and role match, log in the user\n      localStorage.setItem('token', data.token); // Assuming token is returned from backend\n      localStorage.setItem('role', formData.role); // Store role in local storage\n      localStorage.setItem('username', formData.username); // Store username in local storage\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Login failed', error);\n      setError('Server error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"role\",\n      onChange: handleChange,\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"manager\",\n        children: \"Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"fitter\",\n        children: \"Fitter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"issuer\",\n        children: \"Issuer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"create-account\",\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Create a new account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"aorDjqUTjsA2LM+zZpW+vBsNeUM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","Link","fetchUserByUsername","bcrypt","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","username","password","role","navigate","error","setError","handleChange","e","target","name","value","handleSubmit","preventDefault","data","user","isMatch","compare","localStorage","setItem","token","console","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","to","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Reactprac/frontend/src/components/Login.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom'; // Import Link for navigation\r\nimport { fetchUserByUsername } from '../api'; // Import function to fetch user by username\r\nimport bcrypt from 'bcryptjs'; // Import bcrypt to compare password hashes\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n  const [formData, setFormData] = useState({ username: '', password: '', role: '' });\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState(''); // Add state to store error message\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Fetch user by username\r\n      const { data: user } = await fetchUserByUsername(formData.username);\r\n\r\n      // If user doesn't exist\r\n      if (!user) {\r\n        setError('Invalid credentials');\r\n        return;\r\n      }\r\n\r\n      // Compare entered password with hashed password from database\r\n      const isMatch = await bcrypt.compare(formData.password, user.password);\r\n      if (!isMatch) {\r\n        setError('Invalid credentials');\r\n        return;\r\n      }\r\n\r\n      // Compare the role entered with the role in the database\r\n      if (formData.role !== user.role) {\r\n        setError('Incorrect role selected'); // Show error if role does not match\r\n        return;\r\n      }\r\n\r\n      // If the password and role match, log in the user\r\n      localStorage.setItem('token', data.token); // Assuming token is returned from backend\r\n      localStorage.setItem('role', formData.role); // Store role in local storage\r\n      localStorage.setItem('username', formData.username); // Store username in local storage\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      console.error('Login failed', error);\r\n      setError('Server error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"login-form\">\r\n      <h2>Login</h2>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={handleChange} required />\r\n      <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} required />\r\n      <select name=\"role\" onChange={handleChange} required>\r\n        <option value=\"\">Select Role</option>\r\n        <option value=\"manager\">Manager</option>\r\n        <option value=\"fitter\">Fitter</option>\r\n        <option value=\"issuer\">Issuer</option>\r\n      </select>\r\n      <button type=\"submit\">Login</button>\r\n      <p className=\"create-account\">\r\n        Don't have an account? <Link to=\"/register\">Create a new account</Link>\r\n      </p>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}